package com.sitemap.na2ne.activities;

import java.util.ArrayList;
import java.util.List;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.saitu.na2ne.R;
import com.sitemap.na2ne.alipay.AliPayHandler;
import com.sitemap.na2ne.alipay.AliPayHelper;
import com.sitemap.na2ne.application.MyApplication;
import com.sitemap.na2ne.config.WebUrlConfig;
import com.sitemap.na2ne.http.XUtilsHelper;
import com.sitemap.na2ne.models.CodeModel;
import com.sitemap.na2ne.models.MoneyModel;
import com.sitemap.na2ne.models.PackageModel;
import com.sitemap.na2ne.models.UserFriendModel;
import com.sitemap.na2ne.utils.CommonToast;
import com.sitemap.na2ne.views.MyProgressDialog;
import com.umeng.analytics.MobclickAgent;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;

/**
 * 添加好友页面
 * 
 * @author zhang create at 2015年1月6日
 */
public class AddFriendActivity extends Activity implements
		OnClickListener {
	private static AddFriendActivity context;//本类
	private LinearLayout base_back_lay;//返回键
	private TextView back;//回退
	private static MyProgressDialog progressDialog;//进度条
	private XUtilsHelper httpUtil = null;//网络请求帮助类对象
	private Spinner addfriend_type;//退款原因下拉框
	private ArrayAdapter<String> typeadapter;//类型适配器
	private EditText addfriend_num_ed;//联系人电话
	private EditText addfriend_name_ed;//联系人显示名称
//	private EditText addfriend_miaoshu_ed;//终端描述
	private TextView addfriend_sub;//提交
	private String miaoshu="";//描述
	private String selectType="";//选择的类型
	private String jine;//选择的金额
	private AliPayHelper aliPayHelper;//付款工具
	private AliPayHandler aliPayHandler;//付款异步处理类
	private final int zero=0,one=1,two=2,three=3,four=4,five=5,SEVEN=7,eight=8,ELEVEN=11;//0/1/2/3/4/5/7/8/11数字
	private String numberType;//电话号码类型
//	private boolean issub=false;//是否提交
	private List<PackageModel> lPackage=new ArrayList<PackageModel>();
	private String packageType="";//套餐类型
	//套餐类型
	private List<String> buyType=new ArrayList<String>();
		private String[] type = new String[] { "包周￥12", "包月￥35", "包年￥350" };
		//套餐类型2
		private String[] type2=new String[]{"按次收费（1次/1元）","按次套餐（50次/45元）","按次套餐（100次/80元>）"};
		private boolean isctcc=true;//是否电信
		public  List<PackageModel> buyPackage = new ArrayList<PackageModel>();// 购买套餐
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		// 隐藏应用程序的标题栏，即当前activity的标题栏
		this.requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_addfriend);
		progressDialog = MyProgressDialog.createDialog(this);
		context = this;
		initview();
		initAliPay();
		
		if (MyApplication.getNetObject().isNetConnected()) {
			httpUtil = new XUtilsHelper(WebUrlConfig.requestMoney(MyApplication.userModel.getUserID()), handler);
			httpUtil.sendGet(two);
		} else {
			CommonToast.showShortToastMessage(this, "网络无法连接！");
		}
		if (MyApplication.userModel.getTryCount()==one) {
			type[zero]="包周￥1（一次一元包周试用机会）";
		}
		
	}
	
	@Override
	public void onResume() {
		super.onResume();
		// 友盟统计
		MobclickAgent.onResume(this);
	}
	@Override
	public void onPause() {
		super.onPause();
		// 友盟统计
		MobclickAgent.onPause(this);
	}
	
	private final  Handler handler = new Handler() {

		@Override
		public void handleMessage(Message msg) {
			if (progressDialog != null && progressDialog.isShowing()) {
				progressDialog.dismiss();// 关闭进度条
			}
			if (msg.what == two) {
				// 获得余额
				if (msg.arg1 == two) {
//					System.out.println(msg.obj.toString());
					MyApplication.moneyModel=JSON.parseObject(msg.obj.toString(), MoneyModel.class);
					if (MyApplication.moneyModel!=null) {
					}else{
						CommonToast.showShortToastMessage(context, "突然找不到数据了，再给次机会吧>_<");
					}

				}
				if (msg.arg1==three) {
					int  status = -1;
					CodeModel cm=JSON.parseObject(msg.obj.toString(), CodeModel.class);
					if (cm!=null) {
						status=cm.getStatus();
						switch (status) {
						case zero:
							CommonToast.showShortToastMessage(context, "提交好友申请成功，请用该手机短信验证开通！");
							if (jine.equals("1")) {
								MyApplication.userModel.setTryCount(0);
							}
							if (MyApplication.getNetObject().isNetConnected()) {
								httpUtil = new XUtilsHelper(WebUrlConfig.requestMoney(MyApplication.userModel.getUserID()), handler);
								httpUtil.sendGet(two);
							} else {
							}
							if (MyApplication.getNetObject().isNetConnected()) {
								httpUtil = new XUtilsHelper(
										WebUrlConfig.getFriendList(MyApplication.userModel
												.getUserID()), handler);
								httpUtil.sendGet(four);
							} else {
							}
//							issub=false;
							break;
						case one:
							CommonToast.showShortToastMessage(context, "提交申请失败，失败原因："+cm.getErrorMessage());
//							issub=false;
							break;
						case two:
							CommonToast.showShortToastMessage(context, "服务器异常！");
//							issub=false;
							break;
						default:
//							issub=false;
							break;
						}
					}
//					issub=false;
				}
				if (msg.arg1==four) {
					if (MyApplication.luserFriend.size() > 0) {
						MyApplication.luserFriend.clear();
					}
						try {
						MyApplication.luserFriend = JSONObject.parseArray(msg.obj.toString(), UserFriendModel.class);
						finish();
						} catch (Exception e) {
						}
					finish();
				}
				
				// 获得套餐列表
				if (msg.arg1 == SEVEN) {
					// System.out.println(msg.obj.toString());
					buyType.clear();
					buyPackage = JSONObject.parseArray(
							msg.obj.toString(), PackageModel.class);
					
					for (int i = 0; i <buyPackage.size(); i++) {
						buyType.add(buyPackage.get(i).getPackageName());
					}
					typeadapter = new ArrayAdapter<String>(AddFriendActivity.this,
							android.R.layout.simple_spinner_item, buyType);
					typeadapter.setDropDownViewResource(R.layout.drop_down_item);
					addfriend_type.setAdapter(typeadapter);	

				}

			} else if (msg.what == one) {
				CommonToast.showShortToastMessage(context, "服务器繁忙，请稍后重试");
//				issub=false;
				// 获取数据异常
			} else if (msg.what == zero) {
				// 返回数据为null
				if (msg.arg1 == one) {
					CommonToast.showShortToastMessage(context, "服务器异常！");
//					issub=false;
				}
				if (msg.arg1 == two) {
					CommonToast.showShortToastMessage(context, "服务器异常！");
//					issub=false;
				}
			}else if (msg.what==five) {
//				if (MyApplication.isCTCCNO(addfriend_num_ed.getText().toString().trim())) {
//					packageType(1);
//					numberType="1";
////					typeadapter = new ArrayAdapter<String>(AddFriendActivity.this,
////							android.R.layout.simple_spinner_item, type);
////					typeadapter.setDropDownViewResource(R.layout.drop_down_item);
////					addfriend_type.setAdapter(typeadapter);	
////					isctcc=true;
////				}else {
////					typeadapter = new ArrayAdapter<String>(AddFriendActivity.this,
////							android.R.layout.simple_spinner_item, type2);
////					typeadapter.setDropDownViewResource(R.layout.drop_down_item);
////					addfriend_type.setAdapter(typeadapter);	
////					isctcc=false;
//				}
//				if (MyApplication.isCMCCNO(addfriend_num_ed.getText().toString().trim())) {
//					packageType(2);
//					numberType="2";
//				}
//				if (MyApplication.isCUCCNO(addfriend_num_ed.getText().toString().trim())) {
//					packageType(3);
//					numberType="3";
//				}
				
			}
		}

	};

	/**
	 * 初始化控件
	 */
	private void initview() {
		back=(TextView)findViewById(R.id.back_tv);
		back.setOnClickListener(this);
		addfriend_sub=(TextView)findViewById(R.id.addfriend_sub);
		addfriend_sub.setOnClickListener(this);
		addfriend_num_ed=(EditText)findViewById(R.id.addfriend_num_ed);
		addfriend_name_ed=(EditText)findViewById(R.id.addfriend_name_ed);
//		addfriend_miaoshu_ed=(EditText)findViewById(R.id.addfriend_miaoshu_ed);
		base_back_lay=(LinearLayout)findViewById(R.id.base_back_lay);
		base_back_lay.setOnClickListener(this);
		addfriend_type=(Spinner)findViewById(R.id.addfriend_type);
		addfriend_num_ed.addTextChangedListener(new TextWatcher() {
			
			@Override
			public void onTextChanged(CharSequence s, int start, int before, int count) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void beforeTextChanged(CharSequence s, int start, int count,
					int after) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void afterTextChanged(Editable s) {
				if (s.length()==11) {
//					handler.sendEmptyMessage(five);
					numberType="4";
					if (MyApplication.isCTCCNO(s.toString())) {
						numberType="1";
					}else 
					if (MyApplication.isCMCCNO(s.toString())) {
						numberType="2";
					}else
					if (MyApplication.isCUCCNO(s.toString())) {
						numberType="3";
					}else {
						CommonToast.showShortToastMessage(context,
								"请输入正确的手机号！");
						return;
					}
					if (MyApplication.getNetObject().isNetConnected()) {
						if (progressDialog != null && !progressDialog.isShowing()) {
							progressDialog.setMessage("正在获得套餐列表...");
							progressDialog.show();
						}
						
						httpUtil = new XUtilsHelper(WebUrlConfig.getPackageInfo(s.toString(),
								numberType), handler);
						httpUtil.sendGet(SEVEN);
					} else {
						CommonToast.showShortToastMessage(context,
								"网络无法连接！");
					}
				}else {
					addfriend_type.setAdapter(null);
				}
			}
		});
		
		
	}

	/**
	 * 初始化支付环境
	 */
	private void initAliPay(){
//		注意以下代码顺序不可变
		if(aliPayHandler==null){
			aliPayHandler=new AliPayHandler(this);
		}
		if(aliPayHelper==null){
			aliPayHelper=new AliPayHelper(this, aliPayHandler);
		}
		
	}
	
	@Override
	public void onClick(View v) {
		if (v==base_back_lay) {
			finish();
		}
		if (v==back) {
			finish();
		}
		if (v==addfriend_sub) {
//			if (issub) {
//				
//			}else {
//				issub=true;
			if (MyApplication.moneyModel==null||MyApplication.moneyModel.getBalance()==null) {
			
				if (MyApplication.getNetObject().isNetConnected()) {
					progressDialog.setMessage("获取余额中，请稍后");
					progressDialog.show();
					httpUtil = new XUtilsHelper(WebUrlConfig.requestMoney(MyApplication.userModel.getUserID()), handler);
					httpUtil.sendGet(two);
				} else {
					CommonToast.showShortToastMessage(this, "网络无法连接！");
				}
//				issub=false;
				return;
			}
			
			if (addfriend_num_ed.getText().toString().trim()==null||addfriend_num_ed.getText().toString().trim().equals("")||addfriend_num_ed.getText().toString().trim().length()!=ELEVEN) {
				CommonToast.showShortToastMessage(this, "请输入正确的手机号！");
//				issub=false;
				return;
			}else {
					if (addfriend_name_ed.getText().toString().trim()==null||addfriend_name_ed.getText().toString().trim().equals("")) {
						CommonToast.showShortToastMessage(this, "联系人显示名字不能为空！");
//						issub=false;
						return;
					}else {
//						if (addfriend_miaoshu_ed.getText().toString().trim()==null||addfriend_miaoshu_ed.getText().toString().trim().equals("")) {
//							miaoshu="";
//						}else {
//							miaoshu=addfriend_miaoshu_ed.getText().toString().trim();
//						}
						jine=buyPackage.get(addfriend_type.getSelectedItemPosition()).getPackagePrice();
						selectType=buyPackage.get(addfriend_type.getSelectedItemPosition()).getPackageID();
						packageType=buyPackage.get(addfriend_type.getSelectedItemPosition()).getPackageType();
						
						if (Integer.parseInt(jine)>Double.parseDouble(MyApplication.moneyModel.getBalance())) {
							CommonToast.showShortToastMessage(this, "余额不足请充值！");
							Intent intent=new Intent(AddFriendActivity.this,RechargeActivity.class);
							intent.putExtra("packageMoney", jine);
							startActivity(intent);
//							aliPayHelper.pay(MyApplication.userModel.getUserID(),"", "", jine);
//							issub=false;
							return;
						}
						//免费
						if (packageType.equals("4")) {
							tishi("用户告知","1、免费套餐显示的位置不是实时位置；\n2、只有当对方开启并安装过APP时，才能获取对方位置，否则将会定位失败；\n3、付费套餐获取的位置信息为对方的实时位置，且不需要安装APP.");
						}else {
							tishi("用户告知","1、定位此号码，需对方短信确认。确认短信内容大致为“【定位云平台】激活定位功能，同意请回复JH”；\n2、对方回复确认短信后，运营商审核时间大约为15分钟，请耐心等待。审核完成后，会显示在首页右上方【被定位号码】列表中；\n3、如果三天之内对方没有回复确认短信，添加好友时的扣款将自动退回账户；\n4、由于通过基站定位，所以显示位置与实际位置可能存在细微偏差；\n5、移动/联通：由于运营商网络限制问题，在4G网络状态下，无法获得对方的实时位置。如需定位，请关闭4G网络；\n6、如果被定位号码是移动用户，则每月会收到一条定位短信提示。");
						}
						
						
						
					}
				
			}
			
//		}
		}
	}

	
	private void packageType(int type){
		switch (type) {
		//电信
		case 1:
			if (MyApplication.lPackage.size() > 0) {
				buyPackage.clear();
				for (int i = 0; i < MyApplication.lPackage.size(); i++) {
					if (MyApplication.lPackage.get(i).getPackageType()
							.equals("1")) {
						buyPackage.add(MyApplication.lPackage.get(i));
					}
				}
			}
			break;
			//移动
		case 2:
			if (MyApplication.lPackage.size() > 0) {
				buyPackage.clear();
				for (int i = 0; i < MyApplication.lPackage.size(); i++) {
					if (MyApplication.lPackage.get(i).getPackageType()
							.equals("2")) {
						buyPackage.add(MyApplication.lPackage.get(i));
					}
				}
			}
			break;
			//联通
		case 3:
			if (MyApplication.lPackage.size() > 0) {
				buyPackage.clear();
				for (int i = 0; i < MyApplication.lPackage.size(); i++) {
					if (MyApplication.lPackage.get(i).getPackageType()
							.equals("3")) {
						buyPackage.add(MyApplication.lPackage.get(i));
					}
				}
			}
			break;
		default:
			break;
		}
	}

	/**
	 * 提交的提示框
	 * @param title
	 * @param msg
	 */
	private void tishi(String title,String msg){
		AlertDialog.Builder normalDia = new AlertDialog.Builder(
				AddFriendActivity.this);
		normalDia.setTitle(title);
		normalDia.setMessage(msg);

		normalDia.setPositiveButton("确定",
				new DialogInterface.OnClickListener() {
					@Override
					public void onClick(DialogInterface dialog,
							int which) {
						if (MyApplication.getNetObject().isNetConnected()) {
							progressDialog.setMessage("提交申请中...");
							progressDialog.show();
							httpUtil = new XUtilsHelper(WebUrlConfig.addFriend(MyApplication.userModel.getUserID(), addfriend_num_ed.getText().toString().trim(), addfriend_name_ed.getText().toString().trim(), selectType, miaoshu,numberType), handler);
							httpUtil.sendGet(three);
						} else {
							CommonToast.showShortToastMessage(AddFriendActivity.this, "网络无法连接！");
//							issub=false;
						}
					}
				});
		normalDia.setNegativeButton("取消",
				new DialogInterface.OnClickListener() {
					@Override
					public void onClick(DialogInterface dialog,
							int which) {
						dialog.dismiss();
					}
				});
		normalDia.create().show();
	}
}
